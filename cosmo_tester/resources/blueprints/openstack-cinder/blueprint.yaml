tosca_definitions_version: cloudify_dsl_1_0

imports:
    - http://www.getcloudify.org/spec/cloudify/3.2m1/types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.2m1/plugin.yaml

inputs:
    image_name: {}
    flavor_name: {}

node_types:
    cloudify.nodes.DiskFileSystem:
        derived_from: cloudify.nodes.Root
        properties:
            use_external_resource:
                default: 'false'
            device_name:
                default: ''
            partition_type:
                default: 83
            partition_number:
                default: 1
            fs_type:
                default: ''
            fs_mount_path:
                default: ''

node_templates:
    test_vm:
        type: cloudify.openstack.nodes.Server
        properties:
            cloudify_agent:
                user: ubuntu
            server:
                image_name: { get_input: image_name}
                flavor_name: { get_input: flavor_name}
    test_volume:
        type: cloudify.openstack.nodes.Volume
        properties:
            volume:
                size: 1
            device_name: /dev/vdc
        relationships:
            - target: test_vm
              type: cloudify.openstack.volume_attached_to_server
# volume_fs node will be injected from the test code
#    volume_fs:
#        type: cloudify.nodes.DiskFileSystem
#        properties:
#            device_name: /dev/vdc
#            fs_type: ext4
#            fs_mount_path: /test-mount
#        interfaces:
#            cloudify.interfaces.lifecycle:
#                create: scripts/fs/create.sh
#                delete: scripts/fs/delete.sh
#        relationships:
#          - target: test_volume
#            type: cloudify.relationships.depends_on
#          - target: test_vm
#            type: cloudify.relationships.contained_in
